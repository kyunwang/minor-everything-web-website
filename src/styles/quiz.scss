.quiz__container {
	padding: 0 var(--indent-1);

	h2 {
		margin-bottom: 1.6rem;
	}
}

.quiz__question-container {
	margin-bottom: 20rem;
	padding-left: var(--indent-1);

	& > ul {
		display: flex;
		flex-direction: column;
		position: relative;
	}

	p {
		font-family: var(--font-primary);
		font-weight: 700;
		font-size: calc(1rem + 1vw);
		line-height: 1.4;
		margin-bottom: 1.6rem;
	}

	li {
		font-family: var(--font-secondary);
		font-size: var(--font-content);
		margin-bottom: 1.6rem;
	}

	input {
		position: absolute;
		opacity: 0;

		& ~ label {
			cursor: pointer;

			span {
				position: relative;
				display: inline-block;
				background: var(--yellow);
				margin-right: -0.6rem;
				padding: 1rem;
				vertical-align: middle;
				z-index: -1;

				&::before {
					content: '';
					position: absolute;
					left: 0;
					top: 16.7%;
					height: calc(100% * (2 / 3));
					width: calc(100% * (2 / 3));
					border-radius: inherit;
					background: var(--grey-dark);

					opacity: 0;
					transform: scale(0) translateX(0);

					transition-property: opacity, width, height, transform;
					transition-duration: var(--anim-time-primary);
					transition-timing-function: var(--anim-cubic-primary);
				}
			}

			&:hover {
				span {
					&::before {
						opacity: 1;
						transform: scale(0.5) translateX(-24%);
					}
				}
			}
		}

		&:focus {
			& ~ label {
				// outline: var(--outline);
				span {
					&::before {
						opacity: 1;
						transform: scale(0.5) translateX(-24%);
					}
				}
			}
		}

		&:checked {
			& ~ label {
				span {
					&::before {
						opacity: 1;
						transform: scale(1) translateX(-24%);
					}
				}
			}
		}
	}

	li {
		[type='radio'],
		[type='checkbox'] {
			& ~ label::before {
				@include background-image(
					'../assets/test_feedback.svg',
					left center,
					6rem
				);
				content: '';
				display: flex;
				align-items: center;
				position: absolute;
				bottom: -8rem;
				left: 0;
				font-family: var(--font-primary);
				font-weight: 700;
				min-height: 6rem;
				width: max-content;
				max-width: 100%;
				background-color: var(--yellow);
				border-radius: 4rem;
				padding: 0.8rem 1.6rem 0.8rem 7.2rem;

				opacity: 0;
				pointer-events: none;

				transition-property: max-width, opacity;
				transition-duration: var(--anim-time-primary);
				transition-timing-function: var(--anim-cubic-primary);
			}
		}
	}

	[type='checkbox'] {
		& ~ label {
			span {
				border-radius: 25%;
			}
		}
	}

	[type='radio'] {
		& ~ label {
			span {
				border-radius: 50%;
			}
		}
	}

	&:nth-of-type(2) {
		& > ul {
			display: grid;
			grid-gap: 0 2.4rem;
		}
	}

	@include media-desktop {
		ul {
			&:nth-of-type(2) {
				margin-left: 2.4rem;
			}
		}

		&:nth-of-type(2) {
			& > ul {
				grid-template-columns: max-content max-content;
			}
		}
	}
}

// TODO: Find a CSS only solution to prevent duplicate psuodo elements. :first-of-type doe snot work
.quiz__question-1 {
	margin-bottom: 20rem;

	aside {
		position: relative;
		display: none;
		overflow: hidden;
		color: #fff;
		margin: 2.4rem 0;
		border-radius: 0.8rem;
		background-color: var(--grey-dark);
		box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);

		transition-property: max-height, opacity, width, height;
		transition-duration: var(--anim-time-primary);
		transition-timing-function: var(--anim-cubic-primary);

		div {
			// position: absolute;
			&:first-of-type {
				// display: none;
				button {
					// all: unset;
					display: inline-block;
					border-radius: 0;
					width: 50%;
					color: #fff;

					transition-property: color;
					transition-timing-function: var(--anim-cubic-primary);
					transition-duration: var(--anim-time-primary);

					&:last-of-type {
						background-color: var(--yellow);
						font-weight: 700;
						color: initial;
					}

					&:hover {
						color: var(--yellow);
						&:last-of-type {
							color: #fff;
						}
					}
				}
			}
		}

		p {
			margin: 0;
			padding: 1.6rem;

			span {
				display: block;
				font-size: 1rem;
				margin-top: 1.6rem;
			}
		}

		button {
			color: initial;
			background-color: initial;
			font-weight: 700;
			height: 100%;
			width: 100%;
			z-index: 10;
			box-shadow: none;
		}

		& > button {
			display: block;

			max-height: 0;
			opacity: 0;
			padding: 0;

			background-color: var(--yellow);
			transition-property: max-height, opacity, width, height;
			transition-duration: var(--anim-time-primary);
			transition-timing-function: var(--anim-cubic-primary);
		}

		&.closed {
			width: 12rem;
			height: 4rem;

			& > button {
				padding: 0;
				max-height: 5rem;
				opacity: 1;
				padding: inherit;
			}
		}
	}

	// @include media-desktop {
	// In case of large phablets. Landscape ipad pro's not included yet
	@media only screen and (min-width: 50rem) and (orientation: landscape) {
		aside {
			display: block;
		}
	}

	@media only screen and (min-width: 70rem) and (orientation: landscape) {
		display: flex;
		flex-flow: column;
		// flex-flow: row-reverse nowrap;
		// justify-content: space-between;

		& > div {
			// width: 50%;
		}

		aside {
			width: 70%;
			margin: 2.4rem auto;
			// margin: 0 0 0 1.6rem;
		}
	}
}

.no-js .quiz__question-1 {
	& > div {
		width: 100%;
	}
	aside {
		display: none;
	}
}

.quiz__question-2 {
	// x and more
	// li:nth-last-child(3):first-child {
	// 	[type='checkbox']:checked {
	// 		& ~ label::before {
	// 			content: 'feedback2';
	// 			// opacity: 1;
	// 		}
	// 	}
	// 	color: pink;
	// }

	// On different elements for the minor transition
	&.show-feedback-1 {
		li:nth-of-type(1) input ~ label {
			&::before {
				content: 'Nice I like those too!';
				opacity: 1;
			}
		}
	}

	&.show-feedback-2 {
		li:nth-of-type(2) input ~ label {
			&::before {
				content: 'Those are really interesting!';
				opacity: 1;
			}
		}
	}

	&.show-feedback-3 {
		li:nth-of-type(3) input ~ label {
			&::before {
				content: 'A curious one huh? I like it!';
				opacity: 1;
			}
		}
	}
}

.quiz__question-3 {
	// [type='checkbox']:nth-last-child(n + 2):first-child,
	// [type='checkbox']:nth-last-child(n + 2):first-child ~ [type='checkbox'] {
	// 	& ~ label::before {
	// 		content: 'feedback3';
	// 		// opacity: 1;
	// 	}
	// 	color: blue;
	// }

	li:nth-of-type(1) {
		input:checked {
			& ~ label::before {
				content: "Time to improve the quality of experience on the web! Design, make and verify the designs you create. Don't forget your users!";
				opacity: 1;
			}
		}
	}

	li:nth-of-type(2) {
		input:checked {
			& ~ label::before {
				content: 'Web socket, real time APIs to create seamless exchange of data through the world.';
				opacity: 1;
			}
		}
	}

	li:nth-of-type(3) {
		input:checked {
			& ~ label::before {
				content: 'Creating accessible, fast and performing products. Where people with and without disabilities, bad and good connection etc. can experience a great time.';
				opacity: 1;
			}
		}
	}

	li:nth-of-type(4) {
		input:checked {
			& ~ label::before {
				content: 'Ready to dive into Server Side JavaScript? Optimalization and Service Workers? Optimize the underperforming web and create offline experiences while at it!';
				opacity: 1;
			}
		}
	}
}

.quiz__editor-container {
	background-color: var(--grey-dark);
	max-height: 100%;
	opacity: 1;

	transition-property: max-height, opacity;
	transition-duration: var(--anim-time-primary);
	transition-timing-function: var(--anim-cubic-primary);

	ul {
		display: grid;
		grid-template-columns: minmax(1rem, 3rem) auto auto auto;
		grid-gap: 0.2rem;
		background: transparent;
		position: relative;

		&::before {
			content: '';
			position: absolute;
			top: 100%;
			height: 160%;
			width: 100%;
			background-image: linear-gradient(
				180deg,
				var(--grey-dark) 0%,
				transparent 100%
			);
			z-index: 2;
		}

		li {
			width: 100%;
			position: relative;
			font-family: var(--font-primary);
			font-weight: 700;
			background: transparent;
			text-align: center;
			text-transform: uppercase;
			margin: 0;
			padding: 0.4rem;
			overflow: hidden;
			z-index: 1;
			cursor: pointer;

			&::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				background-color: var(--yellow);
				z-index: -1;
				transform: translateY(-50%);
				transition-property: transform;
				transition-timing-function: var(--anim-cubic-primary);
				transition-duration: var(--anim-time-primary);
			}

			&:hover,
			&:focus {
				&:nth-of-type(1n + 2)::before {
					transform: translateY(0);
				}
			}
		}

		button {
			padding: 0;
			font-weight: 700;
		}
	}

	pre {
		margin: 0;
		white-space: inherit;
	}

	code {
		position: relative;
		font-family: var(--font-secondary);
		white-space: pre-wrap;
		outline: none;
		display: block;
		font-size: 1rem;
		color: #fafafa;
		height: 24rem;
		padding-left: 1.4rem;
		overflow-y: scroll;
		overflow-x: hidden;

		&::-webkit-scrollbar {
			width: 0.3rem;
		}

		&::-webkit-scrollbar-track {
			-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
			box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
		}

		&::-webkit-scrollbar-thumb {
			background-color: darkgrey;
			outline: 1px solid slategrey;
		}
	}
}

.quiz__to-style {
	position: relative;

	li:nth-of-type(1) [type='radio']:checked {
		& ~ label::before {
			content: 'Great we love people like you!';
			opacity: 1;
		}
	}
	li:nth-of-type(2) [type='radio']:checked {
		& ~ label::before {
			content: 'Hmmm, I am not sure you will like it here then';
			opacity: 1;
		}
	}
	li:nth-of-type(3) [type='radio']:checked {
		& ~ label::before {
			content: 'Are you sure? Sharing is caring!';
			opacity: 1;
		}
	}

	@media only screen and (max-width: 60rem) {
		padding-left: var(--indent-1);

		& > ul {
			display: flex;
			flex-direction: column;
			position: relative;
		}

		p {
			font-family: var(--font-primary);
			font-weight: 700;
			font-size: calc(1rem + 1vw);
			line-height: 1.4;
			margin-bottom: 1.6rem;
		}

		li {
			font-family: var(--font-secondary);
			font-size: var(--font-content);
			margin-bottom: 1.6rem;
		}

		input {
			position: absolute;
			opacity: 0;

			&:focus {
				& ~ label {
					span {
						&::before {
							opacity: 1;
							transform: scale(0.5) translateX(-24%);
						}
					}
				}
			}

			&:checked {
				& ~ label {
					span {
						&::before {
							opacity: 1;
							transform: scale(1) translateX(-24%);
						}
					}
				}
			}

			& ~ label {
				cursor: pointer;

				&:hover {
					span {
						&::before {
							opacity: 1;
							transform: scale(1) translateX(-24%);
						}
					}
				}

				&::before {
					content: '';
					display: flex;
					align-items: center;
					position: absolute;
					bottom: -8rem;
					left: 0;
					font-family: var(--font-primary);
					font-weight: 700;
					min-height: 6rem;
					max-width: 34rem;
					background-image: url('../assets/test_feedback.svg');
					background-position: left center;
					background-size: 6rem;
					background-repeat: no-repeat;
					background-color: var(--yellow);
					border-radius: 4rem;
					padding: 0.8rem 1.6rem 0.8rem 7.2rem;
					opacity: 0;
					pointer-events: none;
					transition-property: max-width, opacity;
					transition-duration: var(--anim-time-primary);
					transition-timing-function: var(--anim-cubic-primary);
				}

				span {
					position: relative;
					display: inline-block;
					background: var(--yellow);
					margin-right: -0.6rem;
					border-radius: 50%;
					padding: 1rem;
					vertical-align: middle;
					z-index: -1;

					&::before {
						content: '';
						position: absolute;
						left: 0;
						top: 16.7%;
						height: calc(100% * (2 / 3));
						width: calc(100% * (2 / 3));
						border-radius: inherit;
						background: var(--grey-dark);
						opacity: 0;
						transform: scale(0) translateX(0);
						transition-property: opacity, width, height, transform;
						transition-duration: var(--anim-time-primary);
						transition-timing-function: var(--anim-cubic-primary);
					}
				}
			}
		}
	}
}

.no-js .quiz__to-style {
	padding-left: var(--indent-1);

	& > ul {
		display: flex;
		flex-direction: column;
		position: relative;
	}

	p {
		font-family: var(--font-primary);
		font-weight: 700;
		font-size: calc(1rem + 1vw);
		line-height: 1.4;
		margin-bottom: 1.6rem;
	}

	li {
		font-family: var(--font-secondary);
		font-size: var(--font-content);
		margin-bottom: 1.6rem;
	}

	input {
		position: absolute;
		opacity: 0;

		&:focus {
			& ~ label {
				span {
					&::before {
						opacity: 1;
						transform: scale(0.5) translateX(-24%);
					}
				}
			}
		}

		&:checked {
			& ~ label {
				span {
					&::before {
						opacity: 1;
						transform: scale(1) translateX(-24%);
					}
				}
			}
		}

		& ~ label {
			cursor: pointer;

			&:hover {
				span {
					&::before {
						opacity: 1;
						transform: scale(1) translateX(-24%);
					}
				}
			}

			&::before {
				content: '';
				display: flex;
				align-items: center;
				position: absolute;
				bottom: -8rem;
				left: 0;
				font-family: var(--font-primary);
				font-weight: 700;
				min-height: 6rem;
				max-max-width: 34rem;
				background-image: url('../assets/test_feedback.svg');
				background-position: left center;
				background-size: 6rem;
				background-repeat: no-repeat;
				background-color: var(--yellow);
				border-radius: 4rem;
				padding-left: 7.2rem;
				padding-right: 1.6rem;
				opacity: 0;
				pointer-events: none;
				transition-property: max-width, opacity;
				transition-duration: var(--anim-time-primary);
				transition-timing-function: var(--anim-cubic-primary);
			}

			span {
				position: relative;
				display: inline-block;
				background: var(--yellow);
				margin-right: -0.6rem;
				border-radius: 50%;
				padding: 1rem;
				vertical-align: middle;
				z-index: -1;

				&::before {
					content: '';
					position: absolute;
					left: 0;
					top: 16.7%;
					height: calc(100% * (2 / 3));
					width: calc(100% * (2 / 3));
					border-radius: inherit;
					background: var(--grey-dark);
					opacity: 0;
					transform: scale(0) translateX(0);
					transition-property: opacity, width, height, transform;
					transition-duration: var(--anim-time-primary);
					transition-timing-function: var(--anim-cubic-primary);
				}
			}
		}
	}
}

/*==========================
=== General
===========================*/

.hide--vertical {
	pointer-events: none;
	max-height: 0;
	opacity: 0;

	// animation: hide--vertical var(--anim-time-primary) forwards;
}

@keyframes hide--vertical {
	from {
		max-height: 20rem;
		opacity: 1;
	}
	// 90% {
	// 	max-height: 0;
	// 	opacity: 0;
	// }
	to {
		display: none;
		max-height: 0;
		opacity: 0;
	}
}
